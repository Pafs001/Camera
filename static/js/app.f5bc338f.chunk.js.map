{"version":3,"sources":["src/modules/Home/index.tsx","src/modules/RecordOptions/index.tsx","src/modules/Testimonial/index.tsx","src/modules/Palavras/index.tsx","src/routes/drawer.routes.tsx","src/routes/index.tsx","App.tsx"],"names":["Home","styles","StyleSheet","create","content","backgroundColor","flex","alignItems","justifyContent","card","box","width","Platform","OS","height","primary","color","secondary","formatedText","fontSize","lineHeight","letterSpacing","textAlignVertical","marginVertical","View","style","Text","RecordOptions","navigation","row","flexDirection","flexWrap","buttonBox","padding","button","minWidth","borderRadius","buttonText","fontWeight","boxText","marginTop","minHeight","textCard","TouchableOpacity","onPress","navigate","Testimonial","useState","hasPermission","setHasPermission","Camera","Constants","Type","back","type","record","setRecord","video","React","useRef","cameraRef","VIDEO_CONFIG","VideoQuality","maxDuration","mute","container","camera","buttonContainer","margin","text","useEffect","a","async","requestCameraPermissionsAsync","status","requestMicrophonePermissionsAsync","ActivityIndicator","size","current","recordAsync","then","data","uri","error","console","log","startRecord","stopRecording","stoptRecord","ref","Video","source","useNativeControls","resizeMode","isLooping","Palavras","render","startRecording","mediaBlobUrl","onClick","src","controls","autoPlay","loop","Drawer","createDrawerNavigator","DrawerNavigation","Navigator","initialRouteName","useLegacyImplementation","screenOptions","route","lazy","Screen","name","component","Routes","Linking","getInitialURL","linking","prefixes","config","screens","About","Settings","NavigationContainer","fallback","App"],"mappings":"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","file":"static/js/app.f5bc338f.chunk.js","sourcesContent":["import React from 'react';\nimport { View,Text, StyleSheet, Platform} from 'react-native';\n\n// import { Container } from './styles';\n\nexport const Home = () => {\n  const styles = StyleSheet.create({\n    content: { \n      backgroundColor: '#e7edea',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    card: {\n      backgroundColor: '#f4f5de'\n    },\n    box: {\n      backgroundColor: '#9e9e9e',\n      width: Platform.OS === 'web' ? 800 : 400,\n      height: Platform.OS === 'web' ? 500 : 200,\n    },\n    primary: {\n      color: '#69d0b3',\n    },\n    secondary: {\n      color: '#181848',\n    },\n    formatedText: {\n      fontSize: Platform.OS === 'web' ? 24 : 16,\n      lineHeight: Platform.OS === 'web' ? 24 : 16,\n      //color: fontColor,\n      // textTransform: textTransform,\n      letterSpacing: 0.11,\n      textAlignVertical: 'center',\n      // fontWeight: !fontBold ? 'normal' : 'bold',\n      marginVertical: 16,\n    },\n  });\n  return (\n    <View style={styles.content}>\n      <Text style={styles.formatedText}>\n        Casa <Text style={styles.primary}>adyen</Text>\n      </Text>\n      <View style={styles.box}>\n\n      </View>\n      <View>\n        <Text style={styles.primary}>Como você imagina o futuro dos pagamentos?</Text>\n      </View>\n      <View>\n        <Text>adyen</Text>\n      </View>\n    </View>\n  );\n}\n","import React from 'react';\nimport { View,Text, StyleSheet, TouchableOpacity, Platform, ActivityIndicator} from 'react-native';\n\n\nexport const RecordOptions: React.FC = ({navigation}) => {\n  const styles = StyleSheet.create({\n    content: { \n      backgroundColor: '#0abf53',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    row: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n    },\n    buttonBox: {\n      padding: 32,\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: Platform.OS === 'web' ? 510 : '100%',\n    },\n    button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      minWidth: '100%',\n      height: 60,\n      borderRadius: 8,\n      backgroundColor: '#FFF',\n    },\n    buttonText: {\n      fontWeight: 'bold',\n      fontSize: 28,\n      \n    },\n    boxText: {\n      backgroundColor: 'rgba(255 ,0 ,255 , 0.2)',\n      marginTop: 16,\n      padding: 34,\n      borderRadius: 8,\n      minHeight: 80,\n    },\n    textCard: {\n      color: '#FFF',\n      fontSize: 22,\n      fontWeight: 'bold'\n    },\n  });\n  \n  return (\n    <View style={styles.content}>\n      <View style={styles.row}>\n        <View style={styles.buttonBox}>\n          <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Depoimentos')}>\n            <Text style={styles.buttonText}>Gravar depoimento</Text>  \n          </TouchableOpacity>\n          <View style={styles.boxText}>\n            <Text style={styles.textCard}>Como serão os pagamentos do futuro? Divida a sua opinião com a gente em até 1 minuto.</Text>\n          </View>\n        </View>\n        <View style={styles.buttonBox}>\n          <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Palavras')}>\n            <Text style={styles.buttonText}>Gravar palavras-chave</Text>  \n          </TouchableOpacity>\n          <View style={styles.boxText}>\n            <Text style={styles.textCard}>O que você pensa sobre os pagamentos do futuro? Compartilhe as palavras que vem a sua cabeça.</Text>\n          </View>        \n        </View>\n      </View>\n    </View>\n  );\n}\n\nexport default RecordOptions;","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, ActivityIndicator, Platform } from 'react-native';\nimport { Camera } from 'expo-camera';\nimport { Video, AVPlaybackStatus } from 'expo-av';\n\nexport const Testimonial: React.FC = () => {\n  const [hasPermission, setHasPermission] = useState<null | boolean>(null);\n  const [type, setType] = useState(Camera.Constants.Type.back);\n  const [record, setRecord] = useState('');\n  const video = React.useRef(null);\n  const cameraRef = React.useRef<null | any>(null);\n  const VIDEO_CONFIG = {\n    VideoQuality:['2160p'],\n    maxDuration:10,\n    // maxFileSize:200,\n    mute:false,\n    // mirror: true,\n    // flash: 'off',\n    // type: 'back',\n    // videoBitrate:5000000\n  };\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    camera: {\n      flex: 1,\n    },\n    buttonContainer: {\n      flex: 1,\n      backgroundColor: 'transparent',\n      flexDirection: 'row',\n      margin: 20,\n    },\n    button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n      height: 60,\n      borderRadius: 8,\n      backgroundColor: '#FFF',\n      marginVertical: 8,\n    },\n    text: {\n      fontSize: 18,\n      color: 'white',\n    },\n    row: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n    },\n    buttonBox: {\n      padding: 32,\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: Platform.OS === 'web' ? 510 : '100%',\n      backgroundColor: '#0abf53',\n      borderRadius: 8,\n    },\n    buttonText: {\n      fontWeight: 'bold',\n      fontSize: 28\n    },\n  });\n\n  useEffect(() => {\n    (async () => {\n      const { status } = await Camera.requestCameraPermissionsAsync();\n      setHasPermission(status === 'granted');\n    })();\n    (async () => {\n      const { status } = await Camera.requestMicrophonePermissionsAsync();\n      setHasPermission(status === 'granted');\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return (\n      <View style={styles.container}>\n        <ActivityIndicator size={'large'} color=\"#0abf53\" />\n      </View>\n    );\n  }\n  if (hasPermission === false) {\n    return (\n      <View style={styles.container}>\n        <Text>Sem acesso a câmera.</Text>\n      </View>\n    );\n  }\n\n  const startRecord = () => {\n    if (cameraRef) {\n      try {\n        cameraRef.current.recordAsync(VIDEO_CONFIG)\n        .then((data: any) => {\n          setRecord(data.uri);\n        });\n      } catch (error) {\n        console.log(error);  \n      }\n    }\n  };\n\n  const stoptRecord = () => {\n    if (cameraRef) {\n      try {\n        cameraRef.current.stopRecording(); \n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const saveVideo = async () => {\n    console.log(`video: ${record}`)\n  }\n  return (\n    <View style={styles.container}>\n      <View style={styles.row}>\n        <View style={styles.buttonBox}>\n          <TouchableOpacity style={styles.button} onPress={() => startRecord()}>\n            <Text style={styles.buttonText}> Iniciar Gravação</Text>  \n          </TouchableOpacity>\n          <TouchableOpacity style={styles.button} onPress={() => stoptRecord()}>\n            <Text style={styles.buttonText}>Finalizar Gravação</Text>  \n          </TouchableOpacity>\n          <TouchableOpacity style={styles.button} onPress={() => saveVideo()}>\n            <Text style={styles.buttonText}>Enviar vídeo</Text>  \n          </TouchableOpacity>\n        </View>\n        <View style={styles.buttonBox}>\n          <Camera \n            style={styles.buttonBox} \n            type={type}\n            ref={cameraRef}\n          />\n        </View>\n        <View style={styles.buttonBox}>\n        \n              <Video\n                ref={video}\n                style={{width: 80, height: 80}}\n                source={{\n                  uri: record,\n                }}\n                useNativeControls\n                resizeMode=\"contain\"\n                isLooping\n                // onPlaybackStatusUpdate={status => setStatus(() => status)}\n              />\n            )\n        \n        </View>\n      </View>\n    </View>\n  );\n}\n\n","import React from 'react';\nimport { View } from 'react-native';\nimport { ReactMediaRecorder } from \"react-media-recorder\";\n\nexport const Palavras: React.FC = () => {\n  return(\n    <View>\n      <ReactMediaRecorder\n        video\n        render={({ status, startRecording, stopRecording, mediaBlobUrl }) => (\n          <div>\n            <p>{status}</p>\n            <button onClick={startRecording}>Start Recording</button>\n            <button onClick={stopRecording}>Stop Recording</button>\n            <video src={mediaBlobUrl} controls autoPlay loop />\n          </div>\n        )}\n      />\n    </View>\n  );\n}\n\n","import { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport { Home } from '../modules/Home';\nimport { RecordOptions } from '../modules/RecordOptions';\nimport { Testimonial } from '../modules/Testimonial';\nimport { Palavras } from '../modules/Palavras';\nconst Drawer = createDrawerNavigator();\n\nexport function DrawerNavigation() {\n  \n  return (\n    <Drawer.Navigator\n      initialRouteName=\"Home\"\n      useLegacyImplementation={false}\n      screenOptions={({ route }) => ({\n        lazy: true,\n      })}\n    >\n        <Drawer.Screen name=\"Home\" component={Home} />\n        <Drawer.Screen name=\"Gravador\" component={RecordOptions} />\n        <Drawer.Screen name=\"Depoimentos\" component={Testimonial} />\n        <Drawer.Screen name=\"Palavras\" component={Palavras} />\n    </Drawer.Navigator>\n  );\n}\n\n","import React from 'react';\nimport { View, Linking } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\n/* Navigation */\nimport { DrawerNavigation } from './drawer.routes';\n\n\nexport const Routes: React.FC = () => {\n\n  \n  const prefix = Linking.getInitialURL();\n  const config = {\n    screens: {\n      About: 'about',\n      Home: 'home',\n      Settings: 'settings',\n    }\n  };\n  const linking = { \n    prefixes: ['app://'],\n    config\n  };\n  return(\n    <SafeAreaProvider>\n      <NavigationContainer\n        linking={linking}\n        fallback={<View />}\n      >\n        <DrawerNavigation />\n      </NavigationContainer>\n    </SafeAreaProvider>\n  );\n}","import 'react-native-gesture-handler';\nimport { Routes } from './src/routes';\n\nexport default function App() {\n  return (\n    <Routes />\n  );\n}\n"],"sourceRoot":""}